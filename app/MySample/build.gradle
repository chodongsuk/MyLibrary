apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.parseInt(project.compileSdkVersion)
    buildToolsVersion project.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion Integer.parseInt(project.minSdkVersion)
        targetSdkVersion Integer.parseInt(project.targetSdkVersion)
        versionCode Integer.parseInt(project.versionCode)
        versionName project.versionName
    }
}

android {
    packagingOptions {
//        pickFirst 'META-INF/foo.txt'

        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    lintOptions {
        abortOnError false
        quiet false
        showAll true
    }

    dexOptions { preDexLibraries = false }
}

android {
    signingConfigs {
        release {
            storeFile file(project.storeFile)
            storePassword project.storePassword
            keyAlias project.keyAlias
            keyPassword project.keyPassword
        }

        debug {
            storeFile file(project.storeFile)
            storePassword project.storePassword
            keyAlias project.keyAlias
            keyPassword project.keyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            versionNameSuffix "." + buildTime()

            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    new File(project(':lib:MyUtil').getProjectDir(), 'util-proguard-rules.pro'),
                    new File(project(':lib:MyCommon').getProjectDir(), 'common-proguard-rules.pro'),
                    'proguard-rules.pro'
        }

        debug {
            zipAlignEnabled true

            versionNameSuffix "." + buildTime() + "-debug"
            signingConfig signingConfigs.debug
        }

        beta {
            initWith(buildTypes.release)

            versionNameSuffix "." + buildTime() + "-beta"
            signingConfig signingConfigs.debug
            debuggable true
        }
    }

    //修改apk名
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent, output.outputFile.name.
                    replace(".apk", "-" + defaultConfig.versionName + "." + buildTime() + ".apk"))
        }
    }
}

dependencies {
    //android.jar
    //compile files("${android.sdk}/platforms/${android.target}/android.jar")
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':lib:MyCommon')
    compile project(':lib:MyFramework')

    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.1'
}
